openapi: 3.0.3
info:
  title: Budget Management API
  description: API для управления бюджетом, категориями и транзакциями
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
    description: Local development server
paths:
  /categories:
    get:
      summary: Получить все категории
      operationId: getAllCategories
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    post:
      summary: Создать новую категорию
      operationId: createCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '201':
          description: Категория успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /categories/{id}:
    get:
      summary: Получить категорию по ID
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Обновить категорию
      operationId: updateCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryRequest'
      responses:
        '200':
          description: Категория успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Удалить категорию
      operationId: deleteCategory
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Категория успешно удалена
        '404':
          description: Категория не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transactions:
    get:
      summary: Получить все транзакции
      operationId: getAllTransactions
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
    post:
      summary: Создать новую транзакцию
      operationId: createTransaction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '201':
          description: Транзакция успешно создана
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /transactions/{id}:
    get:
      summary: Получить транзакцию по ID
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '404':
          description: Транзакция не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Обновить транзакцию
      operationId: updateTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      responses:
        '200':
          description: Транзакция успешно обновлена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Неверные данные запроса
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Транзакция не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Удалить транзакцию
      operationId: deleteTransaction
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Транзакция успешно удалена
        '404':
          description: Транзакция не найдена
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /dashboard/summary:
    get:
      summary: Получить сводку бюджета
      operationId: getDashboardSummary
      responses:
        '200':
          description: Успешный ответ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardSummary'
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        color:
          type: string
      required:
        - id
        - name
        - color
    CategoryRequest:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
      required:
        - name
        - color
    TransactionType:
      type: string
      enum:
        - INCOME
        - EXPENSE
    Transaction:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
        category:
          $ref: '#/components/schemas/Category'
        type:
          $ref: '#/components/schemas/TransactionType'
      required:
        - id
        - description
        - amount
        - date
        - type
    TransactionRequest:
      type: object
      properties:
        description:
          type: string
        amount:
          type: number
          format: double
        date:
          type: string
          format: date
        categoryId:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/TransactionType'
      required:
        - description
        - amount
        - date
        - type
    DashboardSummary:
      type: object
      properties:
        totalIncome:
          type: number
          format: double
        totalExpense:
          type: number
          format: double
        balance:
          type: number
          format: double
        recentTransactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
      required:
        - totalIncome
        - totalExpense
        - balance
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message